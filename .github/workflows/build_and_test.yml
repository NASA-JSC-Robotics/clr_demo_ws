name: build_and_test

on:
  push:
    tags:
      - '*'
    branches:
      - humble
      - jazzy
      - '*-devel'
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review
    branches:
      - '*'
  workflow_dispatch:

# Do not run multiple jobs for the same branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  REPOSITORY_NAME: ${{ github.event.repository.name }}
  TAG: ${{ github.head_ref || github.ref_name }}

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - name: Print info
        run: |
          echo "REPOSITORY_NAME: ${{ env.REPOSITORY_NAME }}"
          echo "TAG: ${{ env.TAG }}"
      # NOTE: This will not work for non-public submodules. Use a token and config substitution instead.
      - name: Checkout code
        uses: actions/checkout@v4
      # TODO: We won't need this once all submodules are public
      - name: Update submodules with a token
        run: |
          git config --global url."https://${{ secrets.IMETRO_TOKEN }}@github.com/".insteadOf "https://github.com/"
          git submodule update --recursive --init
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      # TODO: Use GHCR or Dockerhub to push images once these are public
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          tags: ${{ env.REPOSITORY_NAME }}:${{ env.TAG }}
          target: er4-dev-source
          push: false
          load: true
      - name: Run tests
        run: |
          docker run --rm \
            ${{ env.REPOSITORY_NAME }}:${{ env.TAG }} \
            bash -c "
              colcon test &&
              colcon test-result --verbose
            "
